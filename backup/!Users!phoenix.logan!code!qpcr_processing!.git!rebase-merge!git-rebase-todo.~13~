pick 38db0fe moved control wells to new branch
pick da0263d initial control wells files
pick 9de05ac added control wells folder to config
pick 194bfd7 control wells test data
pick f0619de control wells extra options
pick 6ff5bfe chnaged layouts folder
pick 0186270 removed param for process_welllit
pick 1bbea55 stood up conftest control layouts dir
pick c26e5cd removed unused class
pick 6d80a4b changed config naming
pick 520cd3b control wells tweak
pick 5c1339b conftest update
pick b1f3b05 changed arg name
pick f08a55b control wells file for actual run
pick 95bc0d0 updated comment
pick 96bbe98 updated test-local
pick 4a51df2 changed layout arg name
pick f343875 added local run test with filepath
pick 265b28e makefile with integration test
pick 44e28f8 more example files

# Rebase 087e214..44e28f8 onto 087e214 (20 commands)
#
# Commands:
# p, pick <commit> = use commit
# r, reword <commit> = use commit, but edit the commit message
# e, edit <commit> = use commit, but stop for amending
# s, squash <commit> = use commit, but meld into previous commit
# f, fixup <commit> = like "squash", but discard this commit's log message
# x, exec <command> = run command (the rest of the line) using shell
# b, break = stop here (continue rebase later with 'git rebase --continue')
# d, drop <commit> = remove commit
# l, label <label> = label current HEAD with a name
# t, reset <label> = reset HEAD to a label
# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]
# .       create a merge commit using the original merge commit's
# .       message (or the oneline, if no original merge commit was
# .       specified). Use -c <commit> to reword the commit message.
#
# These lines can be re-ordered; they are executed from top to bottom.
#
# If you remove a line here THAT COMMIT WILL BE LOST.
#
# However, if you remove everything, the rebase will be aborted.
#
# Note that empty commits are commented out
