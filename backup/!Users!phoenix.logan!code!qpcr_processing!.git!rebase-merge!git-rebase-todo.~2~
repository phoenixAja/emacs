pick 1aaea56 rclone backup for qpcr data
pick cb4180b qpcr backup call to process
pick f88c6af form_data folder on S3 for additional organization
pick 3822332 lambda directives for backup or process
pick 3a40305 seperate lambda directive
pick 84b1138 backups command in make
pick 028dff1 fixed inputs
pick 7c56e2e suggestions
pick 7416712 removed qpcr backup
pick 44e21ee removed skip backups flag
pick 86a1c6a lambda deploy for backups in make
pick d24a9c0 removed logging
pick 15dcf2c resetting gdrive to master version
pick 333e30d removed logging import

# Rebase 2411be5..333e30d onto 2411be5 (14 commands)
#
# Commands:
# p, pick <commit> = use commit
# r, reword <commit> = use commit, but edit the commit message
# e, edit <commit> = use commit, but stop for amending
# s, squash <commit> = use commit, but meld into previous commit
# f, fixup <commit> = like "squash", but discard this commit's log message
# x, exec <command> = run command (the rest of the line) using shell
# b, break = stop here (continue rebase later with 'git rebase --continue')
# d, drop <commit> = remove commit
# l, label <label> = label current HEAD with a name
# t, reset <label> = reset HEAD to a label
# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]
# .       create a merge commit using the original merge commit's
# .       message (or the oneline, if no original merge commit was
# .       specified). Use -c <commit> to reword the commit message.
#
# These lines can be re-ordered; they are executed from top to bottom.
#
# If you remove a line here THAT COMMIT WILL BE LOST.
#
# However, if you remove everything, the rebase will be aborted.
#
# Note that empty commits are commented out
